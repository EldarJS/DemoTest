name: Playwright C# Tests

on:
  workflow_dispatch:
    inputs:
      run_username:
        description: "SauceDemo username (optional; overrides secret)"
        required: false
      run_password:
        description: "SauceDemo password (optional; overrides secret)"
        required: false

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Locate project
        id: locate
        shell: bash
        run: |
          set -e
          PROJECT_FILE="$(git ls-files '*.csproj' | head -n 1)"
          if [ -z "$PROJECT_FILE" ]; then
            echo "No .csproj found!"; exit 1
          fi
          echo "Found project: $PROJECT_FILE"
          echo "PROJECT_FILE=$PROJECT_FILE" >> $GITHUB_ENV
          echo "PROJECT_DIR=$(dirname "$PROJECT_FILE")" >> $GITHUB_ENV

      - name: Restore
        run: dotnet restore "${{ env.PROJECT_FILE }}"

      - name: Install Playwright Browsers
        run: |
          dotnet tool install --global Microsoft.Playwright.CLI
          # важно запускать установку из папки проекта
          (cd "${{ env.PROJECT_DIR }}" && playwright install --with-deps)

      - name: Set credentials (inputs override secrets)
        run: |
          echo "SAUCE_USERNAME=${{ github.event.inputs.run_username != '' && github.event.inputs.run_username || secrets.SAUCE_USERNAME }}" >> $GITHUB_ENV
          echo "SAUCE_PASSWORD=${{ github.event.inputs.run_password != '' && github.event.inputs.run_password || secrets.SAUCE_PASSWORD }}" >> $GITHUB_ENV

      - name: Run tests (headless in CI)
        env:
          SAUCE_USERNAME: ${{ env.SAUCE_USERNAME }}
          SAUCE_PASSWORD: ${{ env.SAUCE_PASSWORD }}
          CI: "true"
        run: dotnet test "${{ env.PROJECT_FILE }}" --logger "trx;LogFileName=test_results.trx"

      - name: Upload TestResults
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: |
            ${{ env.PROJECT_DIR }}/TestResults/**/*.png
            ${{ env.PROJECT_DIR }}/**/TestResults/**/*.png
            ${{ env.PROJECT_DIR }}/*.trx
            ${{ env.PROJECT_DIR }}/**/*.trx
          if-no-files-found: ignore
